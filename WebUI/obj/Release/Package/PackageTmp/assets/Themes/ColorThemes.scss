@import "bootstrap-scss/_functions.scss";
@import "bootstrap-scss/_variables.scss";
@import "bootstrap-scss/_mixins.scss";
@import "../css/Colors.scss";
@import "_data-color-theme.scss";
@function color-theme-text($mode, $color, $value) {
	@if $mode == light {
		@if $color != base {
			@return tint-color($value, 15%);
		}
		@else {
			@return $body-color;
		}
	}
	@else {
		@if $color != base {
			@return tint-color($value, 15%);
		}
		@else {
			@return $body-color-dark;
		}
	}
}

@function color-theme-subtle($mode, $color, $value) {
	@if $mode == light {
		@return rgba($value, 0.15);
	}
	@else {
		@if $color != base {
			@return rgba($value, 0.15);
		}
		@else {
			@return rgba($black, 0.15);
		}
	}
}

@include color-mode(light) {
	--bs-body-bg: #dddddd;
	--bs-body-bg-rgb: rgb(221, 221, 221);
	--bs-secondary-bg: #ffffff;
	--bs-secondary-bg-rgb: rgb(255, 255, 255);
	--bs-tertiary-bg: #e9ecef;
	--bs-tertiary-bg-rgb: rgb(233, 236, 239);
	--bs-border-color: rgba(0, 0, 0, 0.25);
	--chart-border-color: rgba(0, 0, 0, 0.35);
	--chart-line-color: rgba(35, 35, 35, 0.75);
}

@each $color, $value in $color-themes {
	@include color-theme(light, $color) {
		$color-theme-text: color-theme-text(light, $color, $value);
		$color-theme-active-bg: tint-color($value, 15%);
		$color-theme-active-bg-subtle: color-theme-subtle(light, $color, $value);
		$color-theme-border-color: $color-theme-text;
		$color-theme-check-color: rgba($color-theme-text, 0.99);
		$checkbox-checked-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$color-theme-check-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/></svg>");
		$radio-checked-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$color-theme-check-color}'/></svg>");
		--color-theme-text: #{$color-theme-text};
		--active-bg: #{$color-theme-active-bg};
		--active-bg-subtle: #{$color-theme-active-bg-subtle};
		--active-text: white;
		--custom-theme-border-color: #{$color-theme-border-color};

		.form-check-inline input:checked[type=checkbox] {
			--bs-form-check-bg-image: #{$checkbox-checked-image} !important;
		}

		.form-check-inline input:checked[type=radio] {
			--bs-form-check-bg-image: #{$radio-checked-image} !important;
		}
	}
	@include color-mode(light) {
		$color-theme-text: color-theme-text(light, $color, $value);
		$color-theme-active-bg-subtle: color-theme-subtle(light, $color, $value);

		##{$color}Option {
			color: #{$color-theme-text};
		}

		@if $color != base {
			##{$color}Switch {
				background-color: #{$color-theme-active-bg-subtle} !important;

				&:checked {
					background-color: #{$color-theme-text} !important;
				}
			}
		}
	}
}

@include color-mode(dark) {
	--bs-border-color: rgba(255, 255, 255, 0.25);
	--chart-border-color: rgba(255, 255, 255, 0.25);
	--chart-line-color: rgba(167, 167, 167, 0.65);
}
@each $color, $value in $color-themes {
	@include color-theme(dark, $color) {
		$color-theme-text: color-theme-text(dark, $color, $value);
		$color-theme-active-bg: tint-color($value, 15%);
		$color-theme-active-bg-subtle: color-theme-subtle(dark, $color, $value);
		$color-theme-border-color: rgba($value, 0.35);
		$color-theme-check-color: rgba($color-theme-text, 0.99);
		$checkbox-checked-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$color-theme-check-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/></svg>");
		$radio-checked-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$color-theme-check-color}'/></svg>");
		--color-theme-text: #{$color-theme-text};
		--active-bg: #{$color-theme-active-bg};
		--active-bg-subtle: #{$color-theme-active-bg-subtle};
		--active-text: white;
		--custom-theme-border-color: #{$color-theme-border-color};

		.form-check-inline input:checked[type=checkbox] {
			--bs-form-check-bg-image: #{$checkbox-checked-image} !important;
		}

		.form-check-inline input:checked[type=radio] {
			--bs-form-check-bg-image: #{$radio-checked-image} !important;
		}
	}

	@include color-mode(dark) {
		$color-theme-text: color-theme-text(dark, $color, $value);
		$color-theme-active-bg-subtle: color-theme-subtle(dark, $color, $value);

		##{$color}Option {
			color: #{$color-theme-text};
		}

		@if $color != base {
			##{$color}Switch {
				background-color: #{$color-theme-active-bg-subtle} !important;

				&:checked {
					background-color: #{$color-theme-text} !important;
				}
			}
		}
	}
}

[data-color-theme=base] {
	--custom-theme-border-color: var(--bs-border-color);
}

.bg-body {
	--bs-bg-opacity: 1;
	background-color: var(--bs-body-bg) !important;
}

.bg-body-secondary {
	--bs-bg-opacity: 1;
	background-color: var(--bs-secondary-bg) !important;
}

.bg-body-tertiary {
	--bs-bg-opacity: 1;
	background-color: var(--bs-tertiary-bg) !important;
}

.form-control, .form-select {
	border-color: var(--custom-theme-border-color);
}

[data-color-theme=base] .form-control:focus, [data-color-theme=base] .form-select:focus {
	box-shadow: 0 0 0 .25rem rgba(13, 110, 253, .25);
}

.form-control:focus, .form-select:focus {
	border-color: var(--custom-theme-border-color);
	box-shadow: 0 0 0 .25rem var(--custom-theme-border-color);
}

.form-check-input {
	border: none;
}

.form-check-input:checked {
	background-color: rgb(29, 30, 32) !important;
	border: none;
}

.form-check-input:focus {
	border: none;
	box-shadow: unset;
}

.form-switch:not(.theme-switch) .form-check-input:not([name="colorThemeRadio"]) {
	background-color: var(--active-bg-subtle) !important;
	border: 1px solid var(--active-bg);
}
.form-switch:not(.theme-switch) .form-check-input:not([name="colorThemeRadio"]):checked {
	background-color: var(--active-bg) !important;
	border: none;
}

.form-switch.theme-switch .form-check-input:checked {
	background-image: url('../images/icons/theme-dark.svg') !important;
}

.form-switch.theme-switch .form-check-input {
	background-image: url('../images/icons/theme-light.svg') !important;
}

[data-bs-theme="dark"] pre[class*=language-] {
	background: var(--bs-body-bg) !important;
}

[data-bs-theme="dark"] .language-javascript,
[data-bs-theme="dark"] .language-js,
[data-bs-theme="dark"] .language-csharp {
	color: #8ddaff !important;
}

[data-bs-theme="dark"] .token.operator,
[data-bs-theme="dark"] .token.punctuation {
	color: #ccc !important;
	background-color: transparent !important;
}

[data-bs-theme="light"] pre[class*=language-] {
	background: var(--bs-tertiary-bg) !important;
}

[data-bs-theme="light"] .language-javascript,
[data-bs-theme="light"] .language-js,
[data-bs-theme="light"] .language-csharp {
	color: #4000ff !important;
}

[data-bs-theme="light"] .token.operator,
[data-bs-theme="light"] .token.punctuation {
	color: #808080 !important;
	background-color: transparent !important;
}

[data-bs-theme="light"] .token.namespace {
	color: #994200 !important;
	background-color: transparent !important;
}